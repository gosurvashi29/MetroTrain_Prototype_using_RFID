
new.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000646  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a8  00800060  00000646  000006da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800108  00800108  00000782  2**0
                  ALLOC
  3 .stab         0000078c  00000000  00000000  00000784  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000e2  00000000  00000000  00000f10  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000ff2  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000098  00000000  00000000  00001021  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c4f  00000000  00000000  000010b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002b0  00000000  00000000  00002d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000061a  00000000  00000000  00002fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000014c  00000000  00000000  000035d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000027c  00000000  00000000  00003720  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000b9d  00000000  00000000  0000399c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  00004539  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	11 e0       	ldi	r17, 0x01	; 1
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 e4       	ldi	r30, 0x46	; 70
  3a:	f6 e0       	ldi	r31, 0x06	; 6
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a8 30       	cpi	r26, 0x08	; 8
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	21 e0       	ldi	r18, 0x01	; 1
  4a:	a8 e0       	ldi	r26, 0x08	; 8
  4c:	b1 e0       	ldi	r27, 0x01	; 1
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	aa 31       	cpi	r26, 0x1A	; 26
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	d8 d0       	rcall	.+432    	; 0x20a <main>
  5a:	f3 c2       	rjmp	.+1510   	; 0x642 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Z8disp_cmdj>:
	_delay_ms(1000);*/
		
		if ((x>1000)&&(x<1050) && (y>390)&&(y<500))
		{
	disp_cmd(0x80);
	disp_string("1. a    2. b");
  5e:	9c 01       	movw	r18, r24
  60:	20 7f       	andi	r18, 0xF0	; 240
  62:	33 27       	eor	r19, r19
	disp_cmd(0xc0);
  64:	28 bb       	out	0x18, r18	; 24
  66:	98 b3       	in	r25, 0x18	; 24
  68:	96 95       	lsr	r25
	disp_string("3. c    4. d");
  6a:	96 95       	lsr	r25
  6c:	9e 5f       	subi	r25, 0xFE	; 254
  6e:	98 bb       	out	0x18, r25	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  70:	ef e9       	ldi	r30, 0x9F	; 159
  72:	ff e0       	ldi	r31, 0x0F	; 15
  74:	31 97       	sbiw	r30, 0x01	; 1
  76:	f1 f7       	brne	.-4      	; 0x74 <_Z8disp_cmdj+0x16>
  78:	00 c0       	rjmp	.+0      	; 0x7a <_Z8disp_cmdj+0x1c>
  7a:	00 00       	nop
  7c:	98 b3       	in	r25, 0x18	; 24
  7e:	92 50       	subi	r25, 0x02	; 2
  80:	98 bb       	out	0x18, r25	; 24
		}
		while (1)
		{
		
			
	if ((x>130)&&(x<300) && (y>100)&&(y<250))
  82:	82 95       	swap	r24
  84:	80 7f       	andi	r24, 0xF0	; 240
  86:	88 bb       	out	0x18, r24	; 24
			 disp_num(bal);
			 _delay_ms(1000);
			 //break;
		 }
	}
	else if ((x>200)&&(x<300) &&(y>850)&& (y<950))
  88:	88 b3       	in	r24, 0x18	; 24
  8a:	86 95       	lsr	r24
  8c:	86 95       	lsr	r24
  8e:	8e 5f       	subi	r24, 0xFE	; 254
		 }
		 
	 }
		
	
	else if ((x>500)&&(x<860) && (y>100)&&(y<250))
  90:	88 bb       	out	0x18, r24	; 24
  92:	8f e9       	ldi	r24, 0x9F	; 159
  94:	9f e0       	ldi	r25, 0x0F	; 15
  96:	01 97       	sbiw	r24, 0x01	; 1
		}
		while (1)
		{
		
			
	if ((x>130)&&(x<300) && (y>100)&&(y<250))
  98:	f1 f7       	brne	.-4      	; 0x96 <_Z8disp_cmdj+0x38>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <_Z8disp_cmdj+0x3e>
  9c:	00 00       	nop
  9e:	88 b3       	in	r24, 0x18	; 24
  a0:	82 50       	subi	r24, 0x02	; 2
  a2:	88 bb       	out	0x18, r24	; 24
  a4:	08 95       	ret

000000a6 <_Z8lcd_initv>:
  a6:	82 e0       	ldi	r24, 0x02	; 2
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	d9 df       	rcall	.-78     	; 0x5e <_Z8disp_cmdj>
  ac:	88 e2       	ldi	r24, 0x28	; 40
  ae:	90 e0       	ldi	r25, 0x00	; 0
	{
		 if(bal>e)
  b0:	d6 df       	rcall	.-84     	; 0x5e <_Z8disp_cmdj>
  b2:	8c e0       	ldi	r24, 0x0C	; 12
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	d3 df       	rcall	.-90     	; 0x5e <_Z8disp_cmdj>
  b8:	86 e0       	ldi	r24, 0x06	; 6
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	d0 df       	rcall	.-96     	; 0x5e <_Z8disp_cmdj>
  be:	08 95       	ret

000000c0 <_Z9disp_datai>:
  c0:	9c 01       	movw	r18, r24
  c2:	20 7f       	andi	r18, 0xF0	; 240
  c4:	33 27       	eor	r19, r19
		 {
			 bal=bal-e;
  c6:	28 bb       	out	0x18, r18	; 24
  c8:	28 b3       	in	r18, 0x18	; 24
  ca:	26 95       	lsr	r18
  cc:	26 95       	lsr	r18
  ce:	2d 5f       	subi	r18, 0xFD	; 253
  d0:	28 bb       	out	0x18, r18	; 24
			 disp_cmd(0x01);
  d2:	ef e9       	ldi	r30, 0x9F	; 159
  d4:	ff e0       	ldi	r31, 0x0F	; 15
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <_Z9disp_datai+0x16>
  da:	00 c0       	rjmp	.+0      	; 0xdc <_Z9disp_datai+0x1c>
  dc:	00 00       	nop
  de:	28 b3       	in	r18, 0x18	; 24
  e0:	23 50       	subi	r18, 0x03	; 3
  e2:	28 bb       	out	0x18, r18	; 24
			 _delay_ms(2);
			 disp_cmd(0x80);
  e4:	82 95       	swap	r24
  e6:	92 95       	swap	r25
  e8:	90 7f       	andi	r25, 0xF0	; 240
			 disp_string("CONFIRMED");
  ea:	98 27       	eor	r25, r24
  ec:	80 7f       	andi	r24, 0xF0	; 240
  ee:	98 27       	eor	r25, r24
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	88 b3       	in	r24, 0x18	; 24
  f4:	86 95       	lsr	r24
  f6:	86 95       	lsr	r24
  f8:	8d 5f       	subi	r24, 0xFD	; 253
  fa:	88 bb       	out	0x18, r24	; 24
			 _delay_ms(2);
			 disp_cmd(0xc0);
  fc:	8f e9       	ldi	r24, 0x9F	; 159
  fe:	9f e0       	ldi	r25, 0x0F	; 15
 100:	01 97       	sbiw	r24, 0x01	; 1
			 disp_string("Avail Bal=");
 102:	f1 f7       	brne	.-4      	; 0x100 <_Z9disp_datai+0x40>
 104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9disp_datai+0x46>
 106:	00 00       	nop
			 disp_cmd(0xcb);
 108:	88 b3       	in	r24, 0x18	; 24
 10a:	83 50       	subi	r24, 0x03	; 3
 10c:	88 bb       	out	0x18, r24	; 24
			 disp_num(bal);
 10e:	08 95       	ret

00000110 <_Z10usart_initv>:
 110:	88 e1       	ldi	r24, 0x18	; 24
 112:	8a b9       	out	0x0a, r24	; 10
 114:	8e e8       	ldi	r24, 0x8E	; 142
 116:	80 bd       	out	0x20, r24	; 32
 118:	83 e3       	ldi	r24, 0x33	; 51
 11a:	89 b9       	out	0x09, r24	; 9
 11c:	10 bc       	out	0x20, r1	; 32
 11e:	08 95       	ret

00000120 <_Z11disp_stringPc>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	ec 01       	movw	r28, r24
 126:	88 81       	ld	r24, Y
 128:	88 23       	and	r24, r24
 12a:	31 f0       	breq	.+12     	; 0x138 <_Z11disp_stringPc+0x18>
			 //break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 12c:	21 96       	adiw	r28, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	c7 df       	rcall	.-114    	; 0xc0 <_Z9disp_datai>
			 disp_cmd(0x80);
 132:	89 91       	ld	r24, Y+
 134:	81 11       	cpse	r24, r1
 136:	fb cf       	rjmp	.-10     	; 0x12e <_Z11disp_stringPc+0xe>
			 disp_string("Please Recharge");
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <_Z8disp_numj>:
			 disp_cmd(0xc0);
 13e:	0f 93       	push	r16
 140:	1f 93       	push	r17
 142:	cf 93       	push	r28
			 disp_string("Avail Bal=");
 144:	df 93       	push	r29
 146:	ec 01       	movw	r28, r24
 148:	00 97       	sbiw	r24, 0x00	; 0
			 disp_cmd(0xcb);
 14a:	59 f5       	brne	.+86     	; 0x1a2 <_Z8disp_numj+0x64>
 14c:	80 e3       	ldi	r24, 0x30	; 48
 14e:	90 e0       	ldi	r25, 0x00	; 0
			 disp_num(bal);
 150:	b7 df       	rcall	.-146    	; 0xc0 <_Z9disp_datai>
 152:	84 e0       	ldi	r24, 0x04	; 4
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	83 df       	rcall	.-250    	; 0x5e <_Z8disp_cmdj>
 158:	20 c0       	rjmp	.+64     	; 0x19a <_Z8disp_numj+0x5c>
 15a:	9e 01       	movw	r18, r28
 15c:	ad ec       	ldi	r26, 0xCD	; 205
 15e:	bc ec       	ldi	r27, 0xCC	; 204
 160:	56 d2       	rcall	.+1196   	; 0x60e <__umulhisi3>
 162:	8c 01       	movw	r16, r24
 164:	16 95       	lsr	r17
 166:	07 95       	ror	r16
 168:	16 95       	lsr	r17
 16a:	07 95       	ror	r16
 16c:	16 95       	lsr	r17
		 }
		 
	 }
		
	
	else if ((x>500)&&(x<860) && (y>100)&&(y<250))
 16e:	07 95       	ror	r16
 170:	98 01       	movw	r18, r16
 172:	22 0f       	add	r18, r18
 174:	33 1f       	adc	r19, r19
 176:	c8 01       	movw	r24, r16
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	82 0f       	add	r24, r18
 186:	93 1f       	adc	r25, r19
 188:	9e 01       	movw	r18, r28
	{
		 if(bal>=f)
 18a:	28 1b       	sub	r18, r24
 18c:	39 0b       	sbc	r19, r25
 18e:	c9 01       	movw	r24, r18
 190:	c0 96       	adiw	r24, 0x30	; 48
 192:	96 df       	rcall	.-212    	; 0xc0 <_Z9disp_datai>
 194:	e8 01       	movw	r28, r16
 196:	20 97       	sbiw	r28, 0x00	; 0
 198:	01 f7       	brne	.-64     	; 0x15a <_Z8disp_numj+0x1c>
 19a:	86 e0       	ldi	r24, 0x06	; 6
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	5f df       	rcall	.-322    	; 0x5e <_Z8disp_cmdj>
		 {
			 bal=bal-f;
 1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_Z8disp_numj+0x6c>
 1a2:	84 e0       	ldi	r24, 0x04	; 4
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	5b df       	rcall	.-330    	; 0x5e <_Z8disp_cmdj>
 1a8:	d8 cf       	rjmp	.-80     	; 0x15a <_Z8disp_numj+0x1c>
 1aa:	df 91       	pop	r29
			 disp_cmd(0x01);
 1ac:	cf 91       	pop	r28
 1ae:	1f 91       	pop	r17
 1b0:	0f 91       	pop	r16
 1b2:	08 95       	ret

000001b4 <_Z11usart_getchv>:
 1b4:	5f 9b       	sbis	0x0b, 7	; 11
 1b6:	fe cf       	rjmp	.-4      	; 0x1b4 <_Z11usart_getchv>
 1b8:	8c b1       	in	r24, 0x0c	; 12
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	08 95       	ret

000001be <_Z10getcard_idv>:
			 _delay_ms(2);
			 disp_cmd(0x80);
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	10 92 0d 01 	sts	0x010D, r1
			 disp_string("CONFIRMED");
 1c6:	10 92 0c 01 	sts	0x010C, r1
 1ca:	c0 e0       	ldi	r28, 0x00	; 0
 1cc:	d0 e0       	ldi	r29, 0x00	; 0
 1ce:	f2 df       	rcall	.-28     	; 0x1b4 <_Z11usart_getchv>
 1d0:	c2 5f       	subi	r28, 0xF2	; 242
 1d2:	de 4f       	sbci	r29, 0xFE	; 254
 1d4:	88 83       	st	Y, r24
			 _delay_ms(2);
			 disp_cmd(0xc0);
 1d6:	c0 91 0c 01 	lds	r28, 0x010C
 1da:	d0 91 0d 01 	lds	r29, 0x010D
			 disp_string("Avail Bal=");
 1de:	21 96       	adiw	r28, 0x01	; 1
 1e0:	d0 93 0d 01 	sts	0x010D, r29
			 disp_cmd(0xcb);
 1e4:	c0 93 0c 01 	sts	0x010C, r28
			 disp_num(bal);
 1e8:	cc 30       	cpi	r28, 0x0C	; 12
 1ea:	d1 05       	cpc	r29, r1
 1ec:	80 f3       	brcs	.-32     	; 0x1ce <_Z10getcard_idv+0x10>
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <_Z8adc_readi>:
 1f4:	80 5c       	subi	r24, 0xC0	; 192
 1f6:	87 b9       	out	0x07, r24	; 7
 1f8:	87 ed       	ldi	r24, 0xD7	; 215
 1fa:	86 b9       	out	0x06, r24	; 6
 1fc:	34 9b       	sbis	0x06, 4	; 6
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <_Z8adc_readi+0x8>
 200:	24 b1       	in	r18, 0x04	; 4
 202:	35 b1       	in	r19, 0x05	; 5
 204:	82 2f       	mov	r24, r18
			 //break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 206:	93 2f       	mov	r25, r19
 208:	08 95       	ret

0000020a <main>:
 20a:	8f ef       	ldi	r24, 0xFF	; 255
			 disp_cmd(0x80);
 20c:	87 bb       	out	0x17, r24	; 23
 20e:	4b df       	rcall	.-362    	; 0xa6 <_Z8lcd_initv>
 210:	8f e9       	ldi	r24, 0x9F	; 159
			 disp_string("Please Recharge");
 212:	9f e0       	ldi	r25, 0x0F	; 15
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <main+0xa>
			 disp_cmd(0xc0);
 218:	00 c0       	rjmp	.+0      	; 0x21a <main+0x10>
 21a:	00 00       	nop
 21c:	79 df       	rcall	.-270    	; 0x110 <_Z10usart_initv>
			 disp_string("Avail Bal=");
 21e:	80 e8       	ldi	r24, 0x80	; 128
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	1d df       	rcall	.-454    	; 0x5e <_Z8disp_cmdj>
			 disp_cmd(0xcb);
 224:	8b ec       	ldi	r24, 0xCB	; 203
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	7b df       	rcall	.-266    	; 0x120 <_Z11disp_stringPc>
			 disp_num(bal);
 22a:	80 ec       	ldi	r24, 0xC0	; 192
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	17 df       	rcall	.-466    	; 0x5e <_Z8disp_cmdj>
 230:	8c ed       	ldi	r24, 0xDC	; 220
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	75 df       	rcall	.-278    	; 0x120 <_Z11disp_stringPc>
 236:	0a ef       	ldi	r16, 0xFA	; 250
 238:	1c e0       	ldi	r17, 0x0C	; 12
 23a:	d5 ef       	ldi	r29, 0xF5	; 245
 23c:	c9 e0       	ldi	r28, 0x09	; 9
 23e:	bf df       	rcall	.-130    	; 0x1be <_Z10getcard_idv>
 240:	8f e9       	ldi	r24, 0x9F	; 159
 242:	9f e0       	ldi	r25, 0x0F	; 15
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <main+0x3a>
			 _delay_ms(1000);
			 //break;
		 }
	}
	else if ((x>200)&&(x<300) &&(y>850)&& (y<950))
 248:	00 c0       	rjmp	.+0      	; 0x24a <main+0x40>
 24a:	00 00       	nop
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	06 df       	rcall	.-500    	; 0x5e <_Z8disp_cmdj>
 252:	9f ef       	ldi	r25, 0xFF	; 255
 254:	20 e7       	ldi	r18, 0x70	; 112
 256:	42 e0       	ldi	r20, 0x02	; 2
 258:	91 50       	subi	r25, 0x01	; 1
 25a:	20 40       	sbci	r18, 0x00	; 0
 25c:	40 40       	sbci	r20, 0x00	; 0
 25e:	e1 f7       	brne	.-8      	; 0x258 <main+0x4e>
 260:	00 c0       	rjmp	.+0      	; 0x262 <main+0x58>
 262:	00 00       	nop
 264:	4c e0       	ldi	r20, 0x0C	; 12
	{
		 if(bal>=g)
 266:	50 e0       	ldi	r21, 0x00	; 0
 268:	6a e6       	ldi	r22, 0x6A	; 106
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	8e e0       	ldi	r24, 0x0E	; 14
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	da d1       	rcall	.+948    	; 0x626 <strncmp>
 272:	28 2f       	mov	r18, r24
 274:	39 2f       	mov	r19, r25
 276:	12 16       	cp	r1, r18
 278:	13 06       	cpc	r1, r19
 27a:	0c f4       	brge	.+2      	; 0x27e <main+0x74>
		 {
			 bal=bal-g;
 27c:	be c1       	rjmp	.+892    	; 0x5fa <__stack+0x19b>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	ed de       	rcall	.-550    	; 0x5e <_Z8disp_cmdj>
 284:	80 ec       	ldi	r24, 0xC0	; 192
 286:	90 e0       	ldi	r25, 0x00	; 0
			 disp_cmd(0x01);
 288:	ea de       	rcall	.-556    	; 0x5e <_Z8disp_cmdj>
 28a:	8b ee       	ldi	r24, 0xEB	; 235
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	48 df       	rcall	.-368    	; 0x120 <_Z11disp_stringPc>
 290:	6f ef       	ldi	r22, 0xFF	; 255
 292:	80 e7       	ldi	r24, 0x70	; 112
 294:	92 e0       	ldi	r25, 0x02	; 2
 296:	61 50       	subi	r22, 0x01	; 1
 298:	80 40       	sbci	r24, 0x00	; 0
			 _delay_ms(2);
			 disp_cmd(0x80);
 29a:	90 40       	sbci	r25, 0x00	; 0
 29c:	e1 f7       	brne	.-8      	; 0x296 <main+0x8c>
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <main+0x96>
			 disp_string("CONFIRMED");
 2a0:	00 00       	nop
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	db de       	rcall	.-586    	; 0x5e <_Z8disp_cmdj>
 2a8:	80 e8       	ldi	r24, 0x80	; 128
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	d8 de       	rcall	.-592    	; 0x5e <_Z8disp_cmdj>
 2ae:	88 e7       	ldi	r24, 0x78	; 120
 2b0:	90 e0       	ldi	r25, 0x00	; 0
			 _delay_ms(2);
			 disp_cmd(0xc0);
 2b2:	36 df       	rcall	.-404    	; 0x120 <_Z11disp_stringPc>
 2b4:	2f ef       	ldi	r18, 0xFF	; 255
 2b6:	49 e6       	ldi	r20, 0x69	; 105
			 disp_string("Avail Bal=");
 2b8:	68 e1       	ldi	r22, 0x18	; 24
 2ba:	21 50       	subi	r18, 0x01	; 1
 2bc:	40 40       	sbci	r20, 0x00	; 0
			 disp_cmd(0xcb);
 2be:	60 40       	sbci	r22, 0x00	; 0
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0xb0>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0xba>
			 disp_num(bal);
 2c4:	00 00       	nop
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	c9 de       	rcall	.-622    	; 0x5e <_Z8disp_cmdj>
 2cc:	8f e9       	ldi	r24, 0x9F	; 159
 2ce:	9f e0       	ldi	r25, 0x0F	; 15
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <main+0xc6>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <main+0xcc>
 2d6:	00 00       	nop
 2d8:	80 e8       	ldi	r24, 0x80	; 128
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	c0 de       	rcall	.-640    	; 0x5e <_Z8disp_cmdj>
 2de:	8c e8       	ldi	r24, 0x8C	; 140
 2e0:	90 e0       	ldi	r25, 0x00	; 0
			 //break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 2e2:	1e df       	rcall	.-452    	; 0x120 <_Z11disp_stringPc>
 2e4:	80 ec       	ldi	r24, 0xC0	; 192
 2e6:	90 e0       	ldi	r25, 0x00	; 0
			 disp_cmd(0x80);
 2e8:	ba de       	rcall	.-652    	; 0x5e <_Z8disp_cmdj>
 2ea:	89 e9       	ldi	r24, 0x99	; 153
 2ec:	90 e0       	ldi	r25, 0x00	; 0
			 disp_string("Please Recharge");
 2ee:	18 df       	rcall	.-464    	; 0x120 <_Z11disp_stringPc>
 2f0:	9f ef       	ldi	r25, 0xFF	; 255
 2f2:	29 e6       	ldi	r18, 0x69	; 105
			 disp_cmd(0xc0);
 2f4:	48 e1       	ldi	r20, 0x18	; 24
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	20 40       	sbci	r18, 0x00	; 0
			 disp_string("Avail Bal=");
 2fa:	40 40       	sbci	r20, 0x00	; 0
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0xec>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0xf6>
			 disp_cmd(0xcb);
 300:	00 00       	nop
 302:	04 bb       	out	0x14, r16	; 20
 304:	15 bb       	out	0x15, r17	; 21
			 disp_num(bal);
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	74 df       	rcall	.-280    	; 0x1f4 <_Z8adc_readi>
 30c:	e8 2e       	mov	r14, r24
 30e:	f9 2e       	mov	r15, r25
 310:	d4 bb       	out	0x14, r29	; 20
 312:	c5 bb       	out	0x15, r28	; 21
 314:	83 e0       	ldi	r24, 0x03	; 3
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	6d df       	rcall	.-294    	; 0x1f4 <_Z8adc_readi>
 31a:	2e 2d       	mov	r18, r14
 31c:	3f 2d       	mov	r19, r15
 31e:	a9 01       	movw	r20, r18
 320:	49 5e       	subi	r20, 0xE9	; 233
 322:	53 40       	sbci	r21, 0x03	; 3
	disp_num(x);
	disp_cmd(0xC5);
	disp_num(y);
	_delay_ms(1000);*/
		
		if ((x>1000)&&(x<1050) && (y>390)&&(y<500))
 324:	41 33       	cpi	r20, 0x31	; 49
 326:	51 05       	cpc	r21, r1
 328:	f0 f4       	brcc	.+60     	; 0x366 <main+0x15c>
 32a:	87 38       	cpi	r24, 0x87	; 135
 32c:	61 e0       	ldi	r22, 0x01	; 1
 32e:	96 07       	cpc	r25, r22
 330:	d4 f0       	brlt	.+52     	; 0x366 <main+0x15c>
 332:	84 3f       	cpi	r24, 0xF4	; 244
 334:	41 e0       	ldi	r20, 0x01	; 1
 336:	94 07       	cpc	r25, r20
 338:	b4 f4       	brge	.+44     	; 0x366 <main+0x15c>
		{
			while((x>1000)&&(x<1050) && (y>390)&&(y<500))
			{
	disp_cmd(0x80);
 33a:	80 e8       	ldi	r24, 0x80	; 128
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	8f de       	rcall	.-738    	; 0x5e <_Z8disp_cmdj>
	disp_string("1. a    2. b");
 340:	8c e8       	ldi	r24, 0x8C	; 140
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	ed de       	rcall	.-550    	; 0x120 <_Z11disp_stringPc>
	disp_cmd(0xc0);
 346:	80 ec       	ldi	r24, 0xC0	; 192
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	89 de       	rcall	.-750    	; 0x5e <_Z8disp_cmdj>
	disp_string("3. c    4. d");
 34c:	89 e9       	ldi	r24, 0x99	; 153
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	e7 de       	rcall	.-562    	; 0x120 <_Z11disp_stringPc>
 352:	6f ef       	ldi	r22, 0xFF	; 255
 354:	89 e6       	ldi	r24, 0x69	; 105
 356:	98 e1       	ldi	r25, 0x18	; 24
 358:	61 50       	subi	r22, 0x01	; 1
 35a:	80 40       	sbci	r24, 0x00	; 0
 35c:	90 40       	sbci	r25, 0x00	; 0
 35e:	e1 f7       	brne	.-8      	; 0x358 <main+0x14e>
 360:	00 c0       	rjmp	.+0      	; 0x362 <main+0x158>
 362:	00 00       	nop
 364:	ea cf       	rjmp	.-44     	; 0x33a <main+0x130>
		}
		
		
		
			
	if ((x>130)&&(x<300) && (y>100)&&(y<250))
 366:	a9 01       	movw	r20, r18
 368:	43 58       	subi	r20, 0x83	; 131
 36a:	51 09       	sbc	r21, r1
 36c:	49 3a       	cpi	r20, 0xA9	; 169
 36e:	51 05       	cpc	r21, r1
 370:	08 f0       	brcs	.+2      	; 0x374 <main+0x16a>
 372:	67 c0       	rjmp	.+206    	; 0x442 <main+0x238>
 374:	85 36       	cpi	r24, 0x65	; 101
 376:	91 05       	cpc	r25, r1
 378:	0c f4       	brge	.+2      	; 0x37c <main+0x172>
 37a:	d1 c0       	rjmp	.+418    	; 0x51e <__stack+0xbf>
 37c:	8a 3f       	cpi	r24, 0xFA	; 250
 37e:	91 05       	cpc	r25, r1
 380:	0c f0       	brlt	.+2      	; 0x384 <main+0x17a>
 382:	cd c0       	rjmp	.+410    	; 0x51e <__stack+0xbf>
	{
		 if(bal>e)
 384:	20 91 60 00 	lds	r18, 0x0060
 388:	30 91 61 00 	lds	r19, 0x0061
 38c:	80 91 68 00 	lds	r24, 0x0068
 390:	90 91 69 00 	lds	r25, 0x0069
 394:	82 17       	cp	r24, r18
 396:	93 07       	cpc	r25, r19
 398:	98 f5       	brcc	.+102    	; 0x400 <main+0x1f6>
		 {
			 bal=bal-e;
 39a:	28 1b       	sub	r18, r24
 39c:	39 0b       	sbc	r19, r25
 39e:	30 93 61 00 	sts	0x0061, r19
 3a2:	20 93 60 00 	sts	0x0060, r18
			 disp_cmd(0x01);
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	59 de       	rcall	.-846    	; 0x5e <_Z8disp_cmdj>
 3ac:	8f e9       	ldi	r24, 0x9F	; 159
 3ae:	9f e0       	ldi	r25, 0x0F	; 15
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <main+0x1a6>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <main+0x1ac>
 3b6:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0x80);
 3b8:	80 e8       	ldi	r24, 0x80	; 128
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	50 de       	rcall	.-864    	; 0x5e <_Z8disp_cmdj>
			 disp_string("CONFIRMED");
 3be:	86 ea       	ldi	r24, 0xA6	; 166
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	ae de       	rcall	.-676    	; 0x120 <_Z11disp_stringPc>
 3c4:	8f e9       	ldi	r24, 0x9F	; 159
 3c6:	9f e0       	ldi	r25, 0x0F	; 15
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	f1 f7       	brne	.-4      	; 0x3c8 <main+0x1be>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <main+0x1c4>
 3ce:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0xc0);
 3d0:	80 ec       	ldi	r24, 0xC0	; 192
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	44 de       	rcall	.-888    	; 0x5e <_Z8disp_cmdj>
			 disp_string("Avail Bal=");
 3d6:	80 eb       	ldi	r24, 0xB0	; 176
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	a2 de       	rcall	.-700    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xcb);
 3dc:	8b ec       	ldi	r24, 0xCB	; 203
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	3e de       	rcall	.-900    	; 0x5e <_Z8disp_cmdj>
			 disp_num(bal);
 3e2:	80 91 60 00 	lds	r24, 0x0060
 3e6:	90 91 61 00 	lds	r25, 0x0061
 3ea:	a9 de       	rcall	.-686    	; 0x13e <_Z8disp_numj>
 3ec:	9f ef       	ldi	r25, 0xFF	; 255
 3ee:	29 e6       	ldi	r18, 0x69	; 105
 3f0:	48 e1       	ldi	r20, 0x18	; 24
 3f2:	91 50       	subi	r25, 0x01	; 1
 3f4:	20 40       	sbci	r18, 0x00	; 0
 3f6:	40 40       	sbci	r20, 0x00	; 0
 3f8:	e1 f7       	brne	.-8      	; 0x3f2 <main+0x1e8>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <main+0x1f2>
 3fc:	00 00       	nop
 3fe:	1f cf       	rjmp	.-450    	; 0x23e <main+0x34>
			 break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	2c de       	rcall	.-936    	; 0x5e <_Z8disp_cmdj>
			 disp_cmd(0x80);
 406:	80 e8       	ldi	r24, 0x80	; 128
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	29 de       	rcall	.-942    	; 0x5e <_Z8disp_cmdj>
			 disp_string("Please Recharge");
 40c:	8b eb       	ldi	r24, 0xBB	; 187
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	87 de       	rcall	.-754    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xc0);
 412:	80 ec       	ldi	r24, 0xC0	; 192
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	23 de       	rcall	.-954    	; 0x5e <_Z8disp_cmdj>
			 disp_string("Avail Bal=");
 418:	80 eb       	ldi	r24, 0xB0	; 176
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	81 de       	rcall	.-766    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xcb);
 41e:	8b ec       	ldi	r24, 0xCB	; 203
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	1d de       	rcall	.-966    	; 0x5e <_Z8disp_cmdj>
			 disp_num(bal);
 424:	80 91 60 00 	lds	r24, 0x0060
 428:	90 91 61 00 	lds	r25, 0x0061
 42c:	88 de       	rcall	.-752    	; 0x13e <_Z8disp_numj>
 42e:	6f ef       	ldi	r22, 0xFF	; 255
 430:	89 e6       	ldi	r24, 0x69	; 105
 432:	98 e1       	ldi	r25, 0x18	; 24
 434:	61 50       	subi	r22, 0x01	; 1
 436:	80 40       	sbci	r24, 0x00	; 0
 438:	90 40       	sbci	r25, 0x00	; 0
 43a:	e1 f7       	brne	.-8      	; 0x434 <main+0x22a>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <main+0x234>
 43e:	00 00       	nop
 440:	fe ce       	rjmp	.-516    	; 0x23e <main+0x34>
		 }
		 
	 }
		
	
	else if ((x>500)&&(x<860) && (y>100)&&(y<250))
 442:	a9 01       	movw	r20, r18
 444:	45 5f       	subi	r20, 0xF5	; 245
 446:	51 40       	sbci	r21, 0x01	; 1
 448:	47 36       	cpi	r20, 0x67	; 103
 44a:	51 40       	sbci	r21, 0x01	; 1
 44c:	08 f0       	brcs	.+2      	; 0x450 <main+0x246>
 44e:	67 c0       	rjmp	.+206    	; 0x51e <__stack+0xbf>
 450:	85 36       	cpi	r24, 0x65	; 101
 452:	91 05       	cpc	r25, r1
 454:	0c f4       	brge	.+2      	; 0x458 <main+0x24e>
 456:	63 c0       	rjmp	.+198    	; 0x51e <__stack+0xbf>
 458:	8a 3f       	cpi	r24, 0xFA	; 250
 45a:	91 05       	cpc	r25, r1
 45c:	0c f0       	brlt	.+2      	; 0x460 <__stack+0x1>
 45e:	5f c0       	rjmp	.+190    	; 0x51e <__stack+0xbf>
	{
		 if(bal>=f)
 460:	20 91 60 00 	lds	r18, 0x0060
 464:	30 91 61 00 	lds	r19, 0x0061
 468:	80 91 66 00 	lds	r24, 0x0066
 46c:	90 91 67 00 	lds	r25, 0x0067
 470:	28 17       	cp	r18, r24
 472:	39 07       	cpc	r19, r25
 474:	98 f1       	brcs	.+102    	; 0x4dc <__stack+0x7d>
		 {
			 bal=bal-f;
 476:	28 1b       	sub	r18, r24
 478:	39 0b       	sbc	r19, r25
 47a:	30 93 61 00 	sts	0x0061, r19
 47e:	20 93 60 00 	sts	0x0060, r18
			 disp_cmd(0x01);
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	eb dd       	rcall	.-1066   	; 0x5e <_Z8disp_cmdj>
 488:	8f e9       	ldi	r24, 0x9F	; 159
 48a:	9f e0       	ldi	r25, 0x0F	; 15
 48c:	01 97       	sbiw	r24, 0x01	; 1
 48e:	f1 f7       	brne	.-4      	; 0x48c <__stack+0x2d>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__stack+0x33>
 492:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0x80);
 494:	80 e8       	ldi	r24, 0x80	; 128
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	e2 dd       	rcall	.-1084   	; 0x5e <_Z8disp_cmdj>
			 disp_string("CONFIRMED");
 49a:	86 ea       	ldi	r24, 0xA6	; 166
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	40 de       	rcall	.-896    	; 0x120 <_Z11disp_stringPc>
 4a0:	8f e9       	ldi	r24, 0x9F	; 159
 4a2:	9f e0       	ldi	r25, 0x0F	; 15
 4a4:	01 97       	sbiw	r24, 0x01	; 1
 4a6:	f1 f7       	brne	.-4      	; 0x4a4 <__stack+0x45>
 4a8:	00 c0       	rjmp	.+0      	; 0x4aa <__stack+0x4b>
 4aa:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0xc0);
 4ac:	80 ec       	ldi	r24, 0xC0	; 192
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	d6 dd       	rcall	.-1108   	; 0x5e <_Z8disp_cmdj>
			 disp_string("Avail Bal=");
 4b2:	80 eb       	ldi	r24, 0xB0	; 176
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	34 de       	rcall	.-920    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xcb);
 4b8:	8b ec       	ldi	r24, 0xCB	; 203
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	d0 dd       	rcall	.-1120   	; 0x5e <_Z8disp_cmdj>
			 disp_num(bal);
 4be:	80 91 60 00 	lds	r24, 0x0060
 4c2:	90 91 61 00 	lds	r25, 0x0061
 4c6:	3b de       	rcall	.-906    	; 0x13e <_Z8disp_numj>
 4c8:	9f ef       	ldi	r25, 0xFF	; 255
 4ca:	29 e6       	ldi	r18, 0x69	; 105
 4cc:	48 e1       	ldi	r20, 0x18	; 24
 4ce:	91 50       	subi	r25, 0x01	; 1
 4d0:	20 40       	sbci	r18, 0x00	; 0
 4d2:	40 40       	sbci	r20, 0x00	; 0
 4d4:	e1 f7       	brne	.-8      	; 0x4ce <__stack+0x6f>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <__stack+0x79>
 4d8:	00 00       	nop
 4da:	b1 ce       	rjmp	.-670    	; 0x23e <main+0x34>
			 break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	be dd       	rcall	.-1156   	; 0x5e <_Z8disp_cmdj>
			 disp_cmd(0x80);
 4e2:	80 e8       	ldi	r24, 0x80	; 128
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	bb dd       	rcall	.-1162   	; 0x5e <_Z8disp_cmdj>
			 disp_string("Please Recharge");
 4e8:	8b eb       	ldi	r24, 0xBB	; 187
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	19 de       	rcall	.-974    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xc0);
 4ee:	80 ec       	ldi	r24, 0xC0	; 192
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	b5 dd       	rcall	.-1174   	; 0x5e <_Z8disp_cmdj>
			 disp_string("Avail Bal=");
 4f4:	80 eb       	ldi	r24, 0xB0	; 176
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	13 de       	rcall	.-986    	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xcb);
 4fa:	8b ec       	ldi	r24, 0xCB	; 203
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	af dd       	rcall	.-1186   	; 0x5e <_Z8disp_cmdj>
			 disp_num(bal);
 500:	80 91 60 00 	lds	r24, 0x0060
 504:	90 91 61 00 	lds	r25, 0x0061
 508:	1a de       	rcall	.-972    	; 0x13e <_Z8disp_numj>
 50a:	6f ef       	ldi	r22, 0xFF	; 255
 50c:	89 e6       	ldi	r24, 0x69	; 105
 50e:	98 e1       	ldi	r25, 0x18	; 24
 510:	61 50       	subi	r22, 0x01	; 1
 512:	80 40       	sbci	r24, 0x00	; 0
 514:	90 40       	sbci	r25, 0x00	; 0
 516:	e1 f7       	brne	.-8      	; 0x510 <__stack+0xb1>
 518:	00 c0       	rjmp	.+0      	; 0x51a <__stack+0xbb>
 51a:	00 00       	nop
 51c:	90 ce       	rjmp	.-736    	; 0x23e <main+0x34>
			 _delay_ms(1000);
			 break;
		 }
	}
	else if ((x>200)&&(x<300) &&(y>850)&& (y<950))
 51e:	29 5c       	subi	r18, 0xC9	; 201
 520:	31 09       	sbc	r19, r1
 522:	23 36       	cpi	r18, 0x63	; 99
 524:	31 05       	cpc	r19, r1
 526:	08 f0       	brcs	.+2      	; 0x52a <__stack+0xcb>
 528:	ec ce       	rjmp	.-552    	; 0x302 <main+0xf8>
 52a:	83 35       	cpi	r24, 0x53	; 83
 52c:	23 e0       	ldi	r18, 0x03	; 3
 52e:	92 07       	cpc	r25, r18
 530:	0c f4       	brge	.+2      	; 0x534 <__stack+0xd5>
 532:	e7 ce       	rjmp	.-562    	; 0x302 <main+0xf8>
 534:	86 3b       	cpi	r24, 0xB6	; 182
 536:	93 40       	sbci	r25, 0x03	; 3
 538:	0c f0       	brlt	.+2      	; 0x53c <__stack+0xdd>
 53a:	e3 ce       	rjmp	.-570    	; 0x302 <main+0xf8>
	{
		 if(bal>=g)
 53c:	20 91 60 00 	lds	r18, 0x0060
 540:	30 91 61 00 	lds	r19, 0x0061
 544:	80 91 64 00 	lds	r24, 0x0064
 548:	90 91 65 00 	lds	r25, 0x0065
 54c:	28 17       	cp	r18, r24
 54e:	39 07       	cpc	r19, r25
 550:	98 f1       	brcs	.+102    	; 0x5b8 <__stack+0x159>
		 {
			 bal=bal-g;
 552:	28 1b       	sub	r18, r24
 554:	39 0b       	sbc	r19, r25
 556:	30 93 61 00 	sts	0x0061, r19
 55a:	20 93 60 00 	sts	0x0060, r18
			 disp_cmd(0x01);
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	7d dd       	rcall	.-1286   	; 0x5e <_Z8disp_cmdj>
 564:	8f e9       	ldi	r24, 0x9F	; 159
 566:	9f e0       	ldi	r25, 0x0F	; 15
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	f1 f7       	brne	.-4      	; 0x568 <__stack+0x109>
 56c:	00 c0       	rjmp	.+0      	; 0x56e <__stack+0x10f>
 56e:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0x80);
 570:	80 e8       	ldi	r24, 0x80	; 128
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	74 dd       	rcall	.-1304   	; 0x5e <_Z8disp_cmdj>
			 disp_string("CONFIRMED");
 576:	86 ea       	ldi	r24, 0xA6	; 166
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	d2 dd       	rcall	.-1116   	; 0x120 <_Z11disp_stringPc>
 57c:	8f e9       	ldi	r24, 0x9F	; 159
 57e:	9f e0       	ldi	r25, 0x0F	; 15
 580:	01 97       	sbiw	r24, 0x01	; 1
 582:	f1 f7       	brne	.-4      	; 0x580 <__stack+0x121>
 584:	00 c0       	rjmp	.+0      	; 0x586 <__stack+0x127>
 586:	00 00       	nop
			 _delay_ms(2);
			 disp_cmd(0xc0);
 588:	80 ec       	ldi	r24, 0xC0	; 192
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	68 dd       	rcall	.-1328   	; 0x5e <_Z8disp_cmdj>
			 disp_string("Avail Bal=");
 58e:	80 eb       	ldi	r24, 0xB0	; 176
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	c6 dd       	rcall	.-1140   	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xcb);
 594:	8b ec       	ldi	r24, 0xCB	; 203
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	62 dd       	rcall	.-1340   	; 0x5e <_Z8disp_cmdj>
			 disp_num(bal);
 59a:	80 91 60 00 	lds	r24, 0x0060
 59e:	90 91 61 00 	lds	r25, 0x0061
 5a2:	cd dd       	rcall	.-1126   	; 0x13e <_Z8disp_numj>
 5a4:	9f ef       	ldi	r25, 0xFF	; 255
 5a6:	29 e6       	ldi	r18, 0x69	; 105
 5a8:	48 e1       	ldi	r20, 0x18	; 24
 5aa:	91 50       	subi	r25, 0x01	; 1
 5ac:	20 40       	sbci	r18, 0x00	; 0
 5ae:	40 40       	sbci	r20, 0x00	; 0
 5b0:	e1 f7       	brne	.-8      	; 0x5aa <__stack+0x14b>
 5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <__stack+0x155>
 5b4:	00 00       	nop
 5b6:	43 ce       	rjmp	.-890    	; 0x23e <main+0x34>
			 break;
		 }
		 
		 else
		 {
			 disp_cmd(0x01);
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	50 dd       	rcall	.-1376   	; 0x5e <_Z8disp_cmdj>
			 disp_cmd(0x80);
 5be:	80 e8       	ldi	r24, 0x80	; 128
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	4d dd       	rcall	.-1382   	; 0x5e <_Z8disp_cmdj>
			 disp_string("Please Recharge");
 5c4:	8b eb       	ldi	r24, 0xBB	; 187
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	ab dd       	rcall	.-1194   	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xc0);
 5ca:	80 ec       	ldi	r24, 0xC0	; 192
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	47 dd       	rcall	.-1394   	; 0x5e <_Z8disp_cmdj>
			 disp_string("Avail Bal=");
 5d0:	80 eb       	ldi	r24, 0xB0	; 176
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	a5 dd       	rcall	.-1206   	; 0x120 <_Z11disp_stringPc>
			 disp_cmd(0xcb);
 5d6:	8b ec       	ldi	r24, 0xCB	; 203
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	41 dd       	rcall	.-1406   	; 0x5e <_Z8disp_cmdj>
			 disp_num(bal);
 5dc:	80 91 60 00 	lds	r24, 0x0060
 5e0:	90 91 61 00 	lds	r25, 0x0061
 5e4:	ac dd       	rcall	.-1192   	; 0x13e <_Z8disp_numj>
 5e6:	6f ef       	ldi	r22, 0xFF	; 255
 5e8:	89 e6       	ldi	r24, 0x69	; 105
 5ea:	98 e1       	ldi	r25, 0x18	; 24
 5ec:	61 50       	subi	r22, 0x01	; 1
 5ee:	80 40       	sbci	r24, 0x00	; 0
 5f0:	90 40       	sbci	r25, 0x00	; 0
 5f2:	e1 f7       	brne	.-8      	; 0x5ec <__stack+0x18d>
 5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <__stack+0x197>
 5f6:	00 00       	nop
 5f8:	22 ce       	rjmp	.-956    	; 0x23e <main+0x34>
	
		}			
	    }
	  else
	  {
		  disp_cmd(0X01);
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	2f dd       	rcall	.-1442   	; 0x5e <_Z8disp_cmdj>
		  disp_cmd(0xC0);
 600:	80 ec       	ldi	r24, 0xC0	; 192
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	2c dd       	rcall	.-1448   	; 0x5e <_Z8disp_cmdj>
		  disp_string("ACCESS DENIED");//gate opens 
 606:	8a ef       	ldi	r24, 0xFA	; 250
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	8a dd       	rcall	.-1260   	; 0x120 <_Z11disp_stringPc>
 60c:	18 ce       	rjmp	.-976    	; 0x23e <main+0x34>

0000060e <__umulhisi3>:
 60e:	a2 9f       	mul	r26, r18
 610:	b0 01       	movw	r22, r0
 612:	b3 9f       	mul	r27, r19
 614:	c0 01       	movw	r24, r0
 616:	a3 9f       	mul	r26, r19
 618:	01 d0       	rcall	.+2      	; 0x61c <__umulhisi3+0xe>
 61a:	b2 9f       	mul	r27, r18
 61c:	70 0d       	add	r23, r0
 61e:	81 1d       	adc	r24, r1
 620:	11 24       	eor	r1, r1
 622:	91 1d       	adc	r25, r1
 624:	08 95       	ret

00000626 <strncmp>:
 626:	fb 01       	movw	r30, r22
 628:	dc 01       	movw	r26, r24
 62a:	41 50       	subi	r20, 0x01	; 1
 62c:	50 40       	sbci	r21, 0x00	; 0
 62e:	30 f0       	brcs	.+12     	; 0x63c <strncmp+0x16>
 630:	8d 91       	ld	r24, X+
 632:	01 90       	ld	r0, Z+
 634:	80 19       	sub	r24, r0
 636:	19 f4       	brne	.+6      	; 0x63e <strncmp+0x18>
 638:	00 20       	and	r0, r0
 63a:	b9 f7       	brne	.-18     	; 0x62a <strncmp+0x4>
 63c:	88 1b       	sub	r24, r24
 63e:	99 0b       	sbc	r25, r25
 640:	08 95       	ret

00000642 <_exit>:
 642:	f8 94       	cli

00000644 <__stop_program>:
 644:	ff cf       	rjmp	.-2      	; 0x644 <__stop_program>
